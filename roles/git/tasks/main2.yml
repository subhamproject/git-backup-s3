  - name: "Install git package"
    yum: name=git state=present
  - name: "Cloning repo from Github private repo"
    git:
      repo: "{{ item }}"
      dest: "{{ playbook_dir }}/clone/{{  item | basename |splitext | first  }}"
      update: no
    with_items:
      - 'https://github.com/subhamproject/my-vansible.git'
      - 'https://github.com/subhamproject/Testrepo.git'
      - 'https://github.com/subhamproject/hari-pom-file.git'
      - 'https://github.com/subhamproject/git-backup-s3.git'
      - 'https://github.com/subhamproject/selenium-test.git'

  - name: "listing all cloned repos"
    shell: find {{ playbook_dir }}/clone -maxdepth 1  ! -name "*clone*" -type d
    ignore_errors: true
    no_log: true
    register: repos
  - name: "Backing up git repositories"
    shell:
       cmd: |
        mkdir -p "{{ playbook_dir }}/backup"
        time=$(date "+%Y-%m-%d")
        tar cvzf {{ playbook_dir }}/backup/{{ item|basename }}-$time.tgz {{ item |basename }}
       warn: False
    args:
       creates: "{{ playbook_dir }}/backup/{{ item |basename }}-$time.tgz"
    with_items:
       - "{{ repos.stdout_lines }}"
  - name: "Collecting all backup file details"
    shell: find "{{ playbook_dir }}" -type f -name *.tgz
    ignore_errors: true
    no_log: true
    register: files
  - name: "Push repositories backup to s3"
    local_action:
       module: s3
       aws_access_key: "{{ access_key }}"
       aws_secret_key: "{{ secret_key }}"
       bucket: "{{ bucket_name }}"
       mode: put
       object: /backup/{{ item | basename }}
       src: "{{ item }}"
       region: "{{ aws_region }}"
       overwrite: no
    with_items:
       - "{{ files.stdout_lines }}"
